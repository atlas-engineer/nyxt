#+html: <img src="https://next.atlas.engineer/static/image/next_256x256.png" align="right"/>
* Next Web Browser
Next is a keyboard-oriented, extensible web-browser designed for power
users. The application has familiar key-bindings ([[https://en.wikipedia.org/wiki/Emacs][Emacs]], [[https://en.wikipedia.org/wiki/Vim_(text_editor)][VI]], or [[https://en.wikipedia.org/wiki/IBM_Common_User_Access][CUA]]),
is fully configurable and extensible in Lisp, and has powerful
features for productive professionals.

Next includes many features designed to enable you to be productive. A
few of them are demonstrated below.

*Warning:* Next is under active development.  Feel free to [[https://github.com/atlas-engineer/next/issues][report]] bugs,
instabilities or feature wishes.

*Security warning for macOS users:* The Cocoa webkit platform port has been
dropped. It's currently not possible to build it without exposing Next to a
remote-execution vulnerability.  We recommend macOS users to wait for the next
release which will feature a new platform port.

** Fast tab switching
Switch easily between your open tabs by fuzzy search. If you are
looking for ~https://www.example.com~, you could type in ~ele~, ~exa~,
~epl~, and any other valid series of letters.

#+html: <img src="https://next.atlas.engineer/static/image/tab_switch.gif" align="center"/>

** History as a tree
History is represented as a tree that you can traverse. More complex
than the "forwards-backwards" abstraction found in other browsers,
the tree makes sure you never lose track of where you've been.

Consider the following example:

1. Start page ~True Parrot~
2. Visit page ~Gray Parrot~
3. Return to page ~True Parrot~
4. Visit page ~Budgerigar~
5. Return to page ~True Parrot~
6. Execute ~forwards~ keybind in history

It is at this point that a normal browser would *not* be able to
navigate you forwards to your visit of ~Gray Parrot~. Instead of
erasing your history, Next offers smart navigation and prompts the
user. Do you wish to go forwards to ~Gray Parrot~ or to
~Budgerigar~?

** Lightning fast navigation
Next is lightweight and fast. The interface does not get in your way-
everything can be done by keyboard. You are free to fully focus on
your task unburdened by cumbersome UI.

Link Hints provide you with the ability to instantly jump to any link
on the page, or even open it in a new tab.

Fuzzy completion means intelligent completion. Find your bookmarks,
open up new links, or switch tabs with the power of fuzzy completion.

#+html: <img src="https://next.atlas.engineer/static/image/fast_navigation.gif" align="center"/>

* Getting Started
** Install Next
See the [[https://next.atlas.engineer/download][downloads]] page for pre-built binaries. Some operating systems
provide packages for Next:

- [[https://aur.archlinux.org/packages/next-browser-git/][Arch Linux AUR]]
- [[https://guix.gnu.org][Guix]]: Install with =guix package --install sbcl-next=.

Guix is a package manager that can be installed on any GNU/Linux distribution;
should Next be missing from your distribution, there is always the possibility
to install Guix on your system and use it to install Next.

- If Guix is easily available for your distribution (e.g. as a
  package), then this is the simplest route.

- If not, or if you want to help developing Next, building from source
  is the recommended route.

To perform an installation from source, please see the [[https://github.com/atlas-engineer/next/tree/master/documents][developer readme]].

*** D-Bus requirement

Since 1.3.0, Next needs a D-Bus session bus to run.
In most cases, it should already be running.

If Next does not start up, it is very likely that D-Bus is not running
for your user.  You can start D-Bus manually manually with the
following shell command:

#+begin_src sh
$ dbus-launch
#+end_src

To enable D-Bus on login, you need to wrap your window manager executable with
~dbus-launch~ in your X initialization file (e.g. =~/.xinitrc=).  For instance,
to start Stumpwm:

#+begin_src sh
# <Your user settings here>
#
# Nothing will be executed after `exec'.
exec dbus-launch --exit-with-session stumpwm &
#+end_src

** Quickstart Keys
- ~C-l~:     Load URL in tab
- ~M-l~:     Load URL in a new tab
- ~C-x b~:   Switch tab
- ~C-b~:     Backwards history
- ~C-f~:     Forwards history
- ~C-x C-c~: Quit

The symbols represent modifiers:

- ~C~: Control key
- ~S~: Super (Windows key, Command key)
- ~M~: Meta (Alt key, Option key)
- ~s~: Shift key

The following keys exist as special keys:

~BACKSPACE~, ~DELETE~, ~ESCAPE~ , ~HYPHEN~, ~RETURN~, ~SPACE~, ~TAB~

** Customize and Extend Next
Customization is possible through the creation of a
=~/.config/next/init.lisp= file. From here you
can override and redefine any of the functions by defining your init
file as part of the ~:next~ package. For more information please see:
[[https://github.com/atlas-engineer/next/blob/master/documents/MANUAL.org#customization][customizing Next]].

Additionally, a document provided in the documents directory named
[[https://github.com/atlas-engineer/next/blob/master/documents/EXTENSION.org][EXTENSION.org]] is a place for the community to share helpful
customizations. To share your own extension, please make a pull
request with your new extension appended to EXTENSION.org.

** Documentation
For full documentation about Next, how it works, and how to extend it
please see the [[https://github.com/atlas-engineer/next/blob/master/documents/MANUAL.org][user manual]].

If you want to help with development or build Next from scratch, read
the developer's documentation at [[https://github.com/atlas-engineer/next/blob/master/documents/README.org][documents/README.org]].


** History of changes
Please see the [[file:documents/CHANGELOG.org][CHANGELOG.org]].
